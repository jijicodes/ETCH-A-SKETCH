body {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 50px;
  font-family: sans-serif;
  background-color: rgb(240, 212, 204);
  font-family: "ZCOOL KuaiLe", cursive;
}

body p {
  font-size: 80px;
}
body p1 {
  font-size: 60px;
  padding: 10px;
  margin-bottom: 20px;
}

.settingBtn {
  display: flex;
  flex-direction: row;
  align-items: center;
}

#size {
  font-size: 50px;
  margin-top: 25px;
}

#gridNum,
#rainbowBtn,
#darkBtn {
  margin-left: 10px;
  margin-right: 10px;
  margin-bottom: 50px;
  margin-top: 20px;
  border-radius: 4px;
  border: none;
  font-size: 41px;
  padding: 20px 40px;
}

#gridNum {
  border-color: black;
}

#rainbowBtn {
  color: black;
  background-image: linear-gradient(
    to right,
    #e7484f,
    #e7484f 16.65%,
    #f68b1d 16.65%,
    #f68b1d 33.3%,
    #fced00 33.3%,
    #fced00 49.95%,
    #009e4f 49.95%,
    #009e4f 66.6%,
    #00aac3 66.6%,
    #00aac3 83.25%,
    #732982 83.25%,
    #732982 100%,
    #e7484f 100%
  );
  animation: slidebg 5s linear infinite;
}
#darkBtn {
  background-color: rgb(81, 82, 82);
  color: white;
}

button {
  cursor: pointer;
}

#squares {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  height: 95vw;
  width: 95vw;
  /*
    you still have to style this div to make the .boxes appear in a grid
    this could be done via a few ways but it would be nice if you did it 
    at least using flexbox/`flex-wrap`, but it would also be good to try to 
    do it with css grids as well
    */
}

.box {
  background-color: whitesmoke;
}

* {
  touch-action: none;
}

#reset {
  margin: 30px;
  margin-left: 30px;
  margin-right: 30px;
  margin-bottom: 30px;
  border-radius: 4px;
  border: none;
  font-size: 41px;
  padding: 20px 90px;
}

@media (min-width: 900px) {
}

@media (min-width: 1200px) {
}
