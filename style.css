:root {
  --reset-height: 45px;
  --grid-height: 95vw;
  --heading-height: calc(
    100 * var(--vh) - var(--grid-height) - var(--reset-height)
  );
}

html {
  height: 100%;
}
#title {
  margin: 0;
  line-height: 1.5em;
}

#instruction {
  line-height: 1em;
}

body {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: sans-serif;
  background-color: rgb(240, 212, 204);
  font-family: "ZCOOL KuaiLe", cursive;
}

header {
  max-height: var(--heading-height);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.settingBtn {
  display: flex;
  align-items: center;
  height: calc(var(--heading-height) - 1.5em - 1em);
  margin-bottom: 10px;
  margin-top: 10px;
  width: 95vw;
  justify-content: space-evenly;
}

#lower,
#larger {
  background-color: rgb(201, 107, 107);
  color: black;
  font-size: 50px;
  text-align: center;
  height: 90%;
  flex-grow: 1;
  border-style: none;
  border-radius: 6px;
  padding-top: 10px;
  margin: 0;
}

#btn1,
#btn2 {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  flex-grow: 4;
}

.colorBtn {
  border-style: none;
  border-radius: 6px;
  width: 94%;
  height: 46%;
}

#rainbowBtn {
  background-image: linear-gradient(
    to right,
    #e7484f,
    #e7484f 16.65%,
    #f68b1d 16.65%,
    #f68b1d 33.3%,
    #fced00 33.3%,
    #fced00 49.95%,
    #009e4f 49.95%,
    #009e4f 66.6%,
    #00aac3 66.6%,
    #00aac3 83.25%,
    #732982 83.25%,
    #732982 100%,
    #e7484f 100%
  );
  animation: slidebg 5s linear infinite;
}
#darkBtn {
  background-color: rgb(81, 82, 82);
  animation: slidebg 5s linear infinite;
}

#candyBtn {
  background-image: linear-gradient(
    135deg,
    white,
    white 16.65%,
    red 16.65%,
    red 33.3%,
    white 33.3%,
    white 49.95%,
    red 49.95%,
    red 66.6%,
    white 66.6%,
    white 83.25%,
    red 83.25%,
    red 100%,
    white 100%
  );
  animation: slidebg 5s linear infinite;
}

#pastelBtn {
  background-image: linear-gradient(
    to left,
    rgb(192, 242, 242),
    rgb(192, 242, 242) 16.65%,
    rgb(214, 241, 138) 16.65%,
    rgb(214, 241, 138) 33.3%,
    hsl(300, 76%, 87%) 33.3%,
    hsl(300, 76%, 87%) 49.95%,
    rgb(167, 255, 196) 49.95%,
    rgb(167, 255, 196) 66.6%,
    rgb(252, 167, 167) 66.6%,
    rgb(252, 167, 167) 83.25%,
    rgb(169, 213, 255) 83.25%,
    rgb(169, 213, 255) 100%,
    rgb(155, 254, 221) 100%
  );
  animation: slidebg 5s linear infinite;
}

button {
  cursor: pointer;
}

#squares {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  height: var(--grid-height);
  width: var(--grid-height);
  touch-action: none;
  /*
    you still have to style this div to make the .boxes appear in a grid
    this could be done via a few ways but it would be nice if you did it 
    at least using flexbox/`flex-wrap`, but it would also be good to try to 
    do it with css grids as well
    */
}

.box {
  background-color: whitesmoke;
}

#reset {
  background-color: rgb(201, 107, 107);
  color: black;
  margin-top: 10px;
  padding: 0px 70px;
}

#resetRow {
  height: var(--reset-height);
}

/* landscape mode */
@media screen and (min-width: 600px) {
  :root {
    /* --reset-height: 45px; */
    --grid-height: 100vh;
    /* --heading-height: calc(
      100 * var(--vh) - var(--grid-height) - var(--reset-height)
    ); */
  }

  body {
    background-color: lavender;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    /* width: 100%;
    max-width: 100%;
    height: 75vh; */
    height: 100vh;
    justify-content: center;
  }

  header {
    display: flex;
    flex-direction: column;
    order: 1;
    max-height: initial;
    height: auto;
    justify-content: space-between;
  }

  #squares {
    order: 3;
  }

  .settingBtn {
    width: 100%;
    height: auto;
  }

  #resetRow {
    order: 2;
  }
}

@media screen and (min-width: 1000px) {
  body {
    background-color: gray;
    max-width: 1000px;
    max-height: 1000px;
    align-items: center;
  }
}
