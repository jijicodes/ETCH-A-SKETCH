:root {
  --reset-height: 90px;
  --grid-height: 95vw;
  --heading-height: calc(100% - var(--grid-height) - var(--reset-height));
}
html {
  height: 100%;
}

body {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: sans-serif;
  background-color: rgb(240, 212, 204);
  font-family: "ZCOOL KuaiLe", cursive;
  overflow: hidden;
}

header {
  height: var(--heading-height - 40px);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.settingBtn {
  display: flex;
  align-items: center;
  height: 100px;
  margin-bottom: 10px;
  margin-top: 10px;
  width: 95vw;
  justify-content: space-evenly;
}

#lower,
#larger {
  background-color: rgb(201, 107, 107);
  color: black;
  font-size: 50px;
  height: 100%;
  flex-grow: 1;
  border-style: none;
  border-radius: 6px;
}

#btn1,
#btn2 {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  flex-grow: 4;
}

.colorBtn {
  border-style: none;
  border-radius: 6px;
  width: 94%;
  height: 46%;
}

#rainbowBtn {
  background-image: linear-gradient(
    to right,
    #e7484f,
    #e7484f 16.65%,
    #f68b1d 16.65%,
    #f68b1d 33.3%,
    #fced00 33.3%,
    #fced00 49.95%,
    #009e4f 49.95%,
    #009e4f 66.6%,
    #00aac3 66.6%,
    #00aac3 83.25%,
    #732982 83.25%,
    #732982 100%,
    #e7484f 100%
  );
  animation: slidebg 5s linear infinite;
}
#darkBtn {
  background-color: rgb(81, 82, 82);
  animation: slidebg 5s linear infinite;
}

#candyBtn {
  background-image: linear-gradient(
    135deg,
    white,
    white 16.65%,
    red 16.65%,
    red 33.3%,
    white 33.3%,
    white 49.95%,
    red 49.95%,
    red 66.6%,
    white 66.6%,
    white 83.25%,
    red 83.25%,
    red 100%,
    white 100%
  );
  animation: slidebg 5s linear infinite;
}

#pastelBtn {
  background-image: linear-gradient(
    to left,
    rgb(192, 242, 242),
    rgb(192, 242, 242) 16.65%,
    rgb(214, 241, 138) 16.65%,
    rgb(214, 241, 138) 33.3%,
    hsl(300, 76%, 87%) 33.3%,
    hsl(300, 76%, 87%) 49.95%,
    rgb(167, 255, 196) 49.95%,
    rgb(167, 255, 196) 66.6%,
    rgb(252, 167, 167) 66.6%,
    rgb(252, 167, 167) 83.25%,
    rgb(169, 213, 255) 83.25%,
    rgb(169, 213, 255) 100%,
    rgb(155, 254, 221) 100%
  );
  animation: slidebg 5s linear infinite;
}

button {
  cursor: pointer;
}

#squares {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  height: var(--grid-height);
  width: var(--grid-height);
  touch-action: none;
  /*
    you still have to style this div to make the .boxes appear in a grid
    this could be done via a few ways but it would be nice if you did it 
    at least using flexbox/`flex-wrap`, but it would also be good to try to 
    do it with css grids as well
    */
}

.box {
  background-color: whitesmoke;
}

#reset {
  background-color: rgb(201, 107, 107);
  color: black;
  margin-top: 10px;
  padding: 0px 70px;
}

#resetRow {
  height: var(--reset-height);
}

[class*="col-"] {
  width: 100%;
}

@media only screen and (min-width: 600px) {
  /* For tablets: */

  .col-s-1 {
    width: 8.33%;
  }
  .col-s-2 {
    width: 16.66%;
  }
  .col-s-3 {
    width: 25%;
  }
  .col-s-4 {
    width: 33.33%;
  }
  .col-s-5 {
    width: 41.66%;
  }
  .col-s-6 {
    width: 50%;
  }
  .col-s-7 {
    width: 58.33%;
  }
  .col-s-8 {
    width: 66.66%;
  }
  .col-s-9 {
    width: 75%;
  }
  .col-s-10 {
    width: 83.33%;
  }
  .col-s-11 {
    width: 91.66%;
  }
  .col-s-12 {
    width: 100%;
  }
}

@media only screen and (min-width: 768px) {
  /* For desktop: */
  .col-1 {
    width: 8.33%;
  }
  .col-2 {
    width: 16.66%;
  }
  .col-3 {
    width: 25%;
  }
  .col-4 {
    width: 33.33%;
  }
  .col-5 {
    width: 41.66%;
  }
  .col-6 {
    width: 50%;
  }
  .col-7 {
    width: 58.33%;
  }
  .col-8 {
    width: 66.66%;
  }
  .col-9 {
    width: 75%;
  }
  .col-10 {
    width: 83.33%;
  }
  .col-11 {
    width: 91.66%;
  }
  .col-12 {
    width: 100%;
  }
}
